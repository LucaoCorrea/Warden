@model Warden.Models.SaleModel
@using Warden.Enums
@{
    ViewData["Title"] = "Nova Venda";
    var products = ViewBag.Products as List<Warden.Models.ProductModel>;
    var success = ViewBag.Success ?? false;
    var saleId = ViewBag.SaleId ?? 0;
}
<link href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" rel="stylesheet" />

<div class="container py-5" data-aos="fade-up">
    <h2 class="mb-4 text-success">🛒 Nova Venda</h2>

    @if (success)
    {
        <div class="alert alert-success">
            Venda finalizada com sucesso! 🎉
            <a class="btn btn-primary ms-3" href="@Url.Action("DownloadInvoice", new { saleId })" target="_blank">📄 Baixar Nota Fiscal</a>
        </div>
    }

    <form asp-action="Create" method="post">
        @Html.AntiForgeryToken()

        <div class="row mb-4 g-3">
            <div class="col-md-6">
                <label class="form-label">👤 Vendedor</label>
                <input asp-for="UserName" class="form-control" placeholder="Nome do vendedor" />
            </div>
            <div class="col-md-6">
                <label class="form-label">💳 Forma de Pagamento</label>
                <select asp-for="PaymentMethod" class="form-control" asp-items="Html.GetEnumSelectList<PaymentMethodEnum>()"></select>
            </div>
        </div>

        <h4 class="mb-3">🧃 Produtos Disponíveis</h4>
        <div class="row row-cols-2 row-cols-md-4 g-3 mb-4">
            @foreach (var product in products)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 150px; object-fit: cover;" />
                        <div class="card-body d-flex flex-column justify-content-between">
                            <h6 class="card-title">@product.Name</h6>
                            <p class="mb-2 text-muted">R$ @product.SalePrice.ToString("F2")</p>
                            <div class="input-group input-group-sm">
                                <input type="number" class="form-control" min="1" value="1" id="qty-@product.Id" />
                                <button type="button" class="btn btn-outline-success" onclick="addItem(@product.Id, '@product.Name', @product.SalePrice)">➕</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <h4 class="mb-3">🧾 Itens da Venda</h4>
        <table class="table table-striped">
            <thead class="table-success">
                <tr>
                    <th>Produto</th>
                    <th>Qtd</th>
                    <th>Unitário</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="itemsTableBody">
            </tbody>
        </table>

        <div id="hiddenItems"></div>

        <div class="d-flex justify-content-between mt-4">
            <a asp-action="Index" class="btn btn-outline-secondary">⬅️ Voltar</a>
            <button type="submit" class="btn btn-success">💰 Finalizar Venda</button>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
    <script>
        AOS.init({ duration: 600, once: true });

        let itemIndex = 0;

        function addItem(productId, productName, price) {
            const qtyInput = document.getElementById('qty-' + productId);
            const quantity = parseInt(qtyInput.value);

            if (!quantity || quantity <= 0) return;

            const total = (quantity * price).toFixed(2);
            const tbody = document.getElementById("itemsTableBody");

            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${productName}</td>
                <td>${quantity}</td>
                <td>R$ ${price.toFixed(2)}</td>
                <td>R$ ${total}</td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remover</button></td>
            `;
            tbody.appendChild(row);

            document.getElementById("hiddenItems").innerHTML += `
                <input type="hidden" name="Items[${itemIndex}].ProductId" value="${productId}" />
                <input type="hidden" name="Items[${itemIndex}].Quantity" value="${quantity}" />
                <input type="hidden" name="Items[${itemIndex}].UnitPrice" value="${price}" />
            `;

            itemIndex++;
            qtyInput.value = 1;
        }

        function removeRow(button) {
            const row = button.closest("tr");
            row.remove();
        }
    </script>
}
