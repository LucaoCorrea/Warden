@model Warden.Models.SaleModel
@using Warden.Enums
@{
    ViewData["Title"] = "Nova Venda";
    var products = ViewBag.Products as List<Warden.Models.ProductModel>;
    var customerList = ViewBag.CustomerList as SelectList;
    var success = ViewBag.Success ?? false;
    var saleId = ViewBag.SaleId ?? 0;
}

<link href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" rel="stylesheet" />

<div class="container py-5" data-aos="fade-up">
    <h2 class="mb-4 text-success">🛒 Nova Venda</h2>

    @if (success)
    {
        <div class="alert alert-success">
            Venda finalizada com sucesso! 🎉
            <a class="btn btn-primary ms-3" href="@Url.Action("DownloadInvoice", new { saleId })" target="_blank">📄 Baixar Nota Fiscal</a>
        </div>
    }

    <form asp-action="Create" method="post" id="saleForm">
        @Html.AntiForgeryToken()

        <div class="row mb-4 g-3">
            <div class="col-md-6">
                <label class="form-label">👤 Vendedor</label>
                <input asp-for="UserName" class="form-control" placeholder="Nome do vendedor" />
            </div>
            <div class="col-md-6">
                <label class="form-label">💳 Forma de Pagamento</label>
                <select asp-for="PaymentMethod" class="form-control" asp-items="Html.GetEnumSelectList<PaymentMethodEnum>()"></select>
            </div>
        </div>

        <div class="mb-4">
            <label class="form-label">🧑‍💼 Warden Lover (Cliente Fidelizado)</label>
            <select asp-for="LoyalCustomerId" id="loyalCustomerSelect" class="form-select" asp-items="customerList">
                <option value="">-- Não selecionar --</option>
            </select>
        </div>

        <h4 class="mb-3">🧃 Produtos Disponíveis</h4>
        <div class="row row-cols-2 row-cols-md-4 g-3 mb-4">
            @foreach (var product in products)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 150px; object-fit: cover;" />
                        <div class="card-body d-flex flex-column justify-content-between">
                            <h6 class="card-title">@product.Name</h6>
                            <p class="mb-2 text-muted">R$ @product.SalePrice.ToString("F2")</p>
                            <div class="input-group input-group-sm">
                                <input type="number" class="form-control" min="1" value="1" id="qty-@product.Id" />
                                <button type="button" class="btn btn-outline-success"
                                        onclick="addItem(@product.Id, '@product.Name', @product.SalePrice.ToString(System.Globalization.CultureInfo.InvariantCulture))">
                                    ➕
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <h4 class="mb-3">🧾 Itens da Venda</h4>
        <table class="table table-striped">
            <thead class="table-success">
                <tr>
                    <th>Produto</th>
                    <th>Qtd</th>
                    <th>Unitário</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="itemsTableBody">
            </tbody>
        </table>

        <div id="hiddenItems"></div>

        <div class="mb-3">
            <p><strong>💸 Cashback Aplicado: </strong> R$ <span id="appliedCashbackAmount">0.00</span></p>
        </div>

        <input type="hidden" name="ApplyCashback" id="ApplyCashback" value="false" />
        <input type="hidden" name="CashbackUsed" id="CashbackUsed" value="0" />

        <div class="d-flex justify-content-between mt-4">
            <a asp-action="Index" class="btn btn-outline-secondary">⬅️ Voltar</a>
            <button type="submit" class="btn btn-success">💰 Finalizar Venda</button>
        </div>
    </form>
</div>

<div class="modal" tabindex="-1" id="cashbackModal" style="display:none; background: rgba(0,0,0,0.5); position:fixed; top:0; left:0; width:100%; height:100%; align-items:center; justify-content:center;">
    <div style="background:white; padding:20px; border-radius:6px; max-width: 400px; margin:auto;">
        <p><strong><span id="customerName"></span></strong> tem cashback disponível: R$ <span id="cashbackAmount"></span></p>
        <p>Deseja aplicar parte desse cashback na venda?</p>
        <div class="mb-3">
            <label for="cashbackInput">Valor a aplicar:</label>
            <input type="number" step="0.01" min="0" id="cashbackInput" class="form-control" />
        </div>
        <div class="d-flex justify-content-end">
            <button class="btn btn-success me-2" id="applyCashbackBtn">Aplicar</button>
            <button class="btn btn-secondary" id="cancelCashbackBtn">Cancelar</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        AOS.init({ duration: 600, once: true });

        let itemIndex = 0;

        function addItem(productId, productName, price) {
            const qtyInput = document.getElementById('qty-' + productId);
            const quantity = parseInt(qtyInput.value);
            if (!quantity || quantity <= 0) return;
            const unitPrice = parseFloat(price);
            if (isNaN(unitPrice)) return;

            const total = (quantity * unitPrice).toFixed(2);
            const tbody = document.getElementById("itemsTableBody");

            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${productName}</td>
                <td>${quantity}</td>
                <td>R$ ${unitPrice.toFixed(2)}</td>
                <td>R$ ${total}</td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remover</button></td>
            `;
            tbody.appendChild(row);

            document.getElementById("hiddenItems").innerHTML += `
                <input type="hidden" name="Items[${itemIndex}].ProductId" value="${productId}" />
                <input type="hidden" name="Items[${itemIndex}].Quantity" value="${quantity}" />
                <input type="hidden" name="Items[${itemIndex}].UnitPrice" value="${unitPrice}" />
            `;

            itemIndex++;
            qtyInput.value = 1;
        }

        function removeRow(button) {
            const row = button.closest("tr");
            row.remove();
        }

        $('#loyalCustomerSelect').change(function () {
            const customerId = $(this).val();
            if (!customerId) {
                $('#cashbackModal').hide();
                $('#ApplyCashback').val("false");
                $('#CashbackUsed').val("0");
                $('#appliedCashbackAmount').text("0.00");
                return;
            }

            $.getJSON('@Url.Action("GetCashback")', { customerId: customerId }, function (data) {
                if (data.cashback > 0) {
                    $('#customerName').text($('#loyalCustomerSelect option:selected').text());
                    $('#cashbackAmount').text(data.cashback.toFixed(2));
                    $('#cashbackInput').val(data.cashback.toFixed(2));
                    $('#cashbackModal').css('display', 'flex');
                } else {
                    $('#cashbackModal').hide();
                    $('#ApplyCashback').val("false");
                    $('#CashbackUsed').val("0");
                    $('#appliedCashbackAmount').text("0.00");
                }
            });
        });

        $('#applyCashbackBtn').click(function () {
            const maxCashback = parseFloat($('#cashbackAmount').text());
            const valueToUse = parseFloat($('#cashbackInput').val());

            if (isNaN(valueToUse) || valueToUse <= 0 || valueToUse > maxCashback) {
                alert("Valor inválido. Insira um valor entre 0 e " + maxCashback.toFixed(2));
                return;
            }

            $('#CashbackUsed').val(valueToUse.toFixed(2));
            $('#ApplyCashback').val("true");
            $('#appliedCashbackAmount').text(valueToUse.toFixed(2)); 
            $('#cashbackModal').hide();
        });

        $('#cancelCashbackBtn').click(function () {
            $('#CashbackUsed').val("0");
            $('#ApplyCashback').val("false");
            $('#cashbackModal').hide();
            $('#appliedCashbackAmount').text("0.00");
        });
    </script>
}
