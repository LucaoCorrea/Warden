@model IEnumerable<Warden.Models.ChatModel>

@{
    ViewData["Title"] = "Chat";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>

<style>
    .chat-container {
        max-width: 600px;
        max-height: 400px;
        margin: 0 auto;
        background: #fff;
        border-radius: 16px;
        padding: 20px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }

    .chat-header {
        text-align: center;
        font-size: 26px;
        color: #dc3545;
        font-weight: 700;
        margin-bottom: 15px;
    }

    .chat-box {
        background: #f7f7f7;
        border-radius: 12px;
        padding: 15px;
        max-height: 280px;
        overflow-y: auto;
    }

    .message-item {
        display: flex;
        flex-direction: column;
        margin-bottom: 10px;
        max-width: 70%;
        padding: 10px 15px;
        border-radius: 16px;
        position: relative;
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
    }

    .message-sent {
        background-color: #dc3545;
        color: #fff;
        margin-left: auto;
    }

    .message-received {
        background-color: #fff;
        color: #333;
        margin-right: auto;
    }

    .message-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 3px;
        font-size: 13px;
        font-weight: 600;
    }

    .message-text {
        font-size: 14px;
        line-height: 1.4;
        word-break: break-word;
    }

    .chat-box::-webkit-scrollbar {
        width: 6px;
    }

    .chat-box::-webkit-scrollbar-thumb {
        background-color: #dc3545;
        border-radius: 6px;
    }

    .no-messages {
        text-align: center;
        color: #999;
        font-style: italic;
        padding: 30px 0;
    }

    .see-more {
        text-align: center;
        margin-top: 5px;
    }

        .see-more button {
            background-color: transparent;
            color: #dc3545;
            border: none;
            font-weight: 600;
            cursor: pointer;
        }

            .see-more button:hover {
                text-decoration: underline;
            }
</style>

<div class="chat-container">
    <div class="chat-header">Chat</div>

    <div class="chat-box" id="chatBox">
        @if (!Model.Any())
        {
            <div class="no-messages">Nenhuma mensagem ainda.</div>
        }
        else
        {
            var recentMessages = Model.OrderByDescending(m => m.SentAt).Take(3).ToList();
            var oldMessages = Model.OrderByDescending(m => m.SentAt).Skip(3).ToList();

            foreach (var message in recentMessages)
            {
                var isMe = message.UserName == "Seu Nome";
                <div class="message-item @(isMe ? "message-sent" : "message-received")">
                    <div class="message-header">
                        <span>@message.UserName</span>
                        <span style="font-weight:400;">@message.SentAt.ToString("dd/MM/yyyy HH:mm")</span>
                    </div>
                    <div class="message-text">
                        @message.Text
                    </div>
                </div>
            }

            if (oldMessages.Any())
            {
                <div class="see-more">
                    <button type="button" data-bs-toggle="modal" data-bs-target="#olderMessagesModal">
                        Ver mensagens mais antigas
                    </button>
                </div>
            }
        }
    </div>
</div>

<div class="modal fade" id="olderMessagesModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Mensagens mais antigas</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                @foreach (var message in Model.OrderBy(m => m.SentAt).SkipLast(3))
                {
                    var isMe = message.UserName == "Seu Nome";
                    <div class="message-item @(isMe ? "message-sent" : "message-received")">
                        <div class="message-header">
                            <span>@message.UserName</span>
                            <span style="font-weight:400;">@message.SentAt.ToString("dd/MM/yyyy HH:mm")</span>
                        </div>
                        <div class="message-text">
                            @message.Text
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function loadMessages() {
        fetch('/Chat/GetMessages')
            .then(response => response.text())
            .then(html => {
                document.getElementById('chatBox').innerHTML = html;
            });
    }

    setInterval(loadMessages, 5000);
</script>
